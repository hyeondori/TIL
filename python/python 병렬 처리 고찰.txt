어제에 이어 추천 시스템을 빠르게 하는 방법을 고민했다.

코드 단에서 속도를 끌어올리기 위해 고찰하던 도중,
문득 우리가 짠 코드가 한 통에 돌아가는 것이 자원 활용 관점에서 올바른 것인가?
에 대한 의구심이 들었다.

다시 말하면 우리가 짠 코드가 cpu 상에서 돌아갈 때, 모든 core를 효율적으로 활용하여 최선을 다하고 있는가에 대한 의구심이었다.
곧 이어서 그렇지 않을 것이라는 결론 끝에 병렬 처리 방법을 고민하였다.
어떠한 반복적인 행위를 통해 적재하는 데이터 파일을 생성할 때, 1번에 한 row만 생성된다면 당연히 느릴 수 밖에 없다는 생각이었다.

이를 해소하려면 단순하게 프로그램을 여러개로 쪼개어 병렬적으로 실행시켜 돌리는 방법이 있고, 이를 코드로 구현하는 방법이 있었다.
아쉽게도 우리에게 주어진 시간은 그리 많지 않았고 전자를 통해 먼저 실험을 해보기로 하였다.

결과는 아주 훌륭했다.
3달이 걸릴 것으로 예상됐던 프로세스는 7시간에 끝날 수 있을 정도로 빨라졌고,
우리는 간단한 방법을 통해 우리의 프로그램의 병목 현상을 해결할 수 있었다.

아래는 코드를 통해 python에서 병렬 처리하는 코드이다.

from multiprocessing import Pool

# 병렬 처리하고자 하는 작업
def multiply(input_tuple):
    result = input_tuple[0]*input_tuple[1]
    return result

# 병렬 처리에 사용할 프로세스 개수 지정
p = Pool(processes=2)

# 병렬 처리 실행
result = p.map(multiply, [(1, 2), (3,4)])
print(result)

추후에 이를 통해 성능 향상을 꾀해보려 한다.